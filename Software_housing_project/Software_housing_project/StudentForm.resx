<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>